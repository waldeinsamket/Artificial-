创建csv文件，生成模拟的数据：
import csv
import random
import datetime

fn='data.csv'
with open(fn,'w')as fp:
    # 创建 csv 文件写入对象
    wr = csv.writer(fp)
    # 写入表头
    wr.writerow(['日期','销量'])
    # 生成模拟数据
    startDate = datetime.date(2019,1,1);
    #datetime.date：表示日期的类。常用的属性有year, month, day；
    #datetime.time：表示时间的类。常用的属性有hour, minute, second, microsecond；
    # datetime.datetime：表示日期时间。
    # datetime.timedelta：表示时间间隔，即两个时间点之间的长度。
    for i in range(365):
        # 生成一个模拟数据，写入 csv 文件
        amount = 300 + i*5 + random.randrange(100)
        #日期和销量
        wr.writerow([str(startDate),amount])
        #下一天=今天+两个日期的间隔
        startDate = startDate + datetime.timedelta(days=1)

开始绘图：
import pandas as pd
import matplotlib.pyplot as plt

# 读取数据，丢弃缺失值
df = pd.read_csv('data.csv',encoding= "cp936")
df = df.dropna()

#生成营业额折线图
plt.figure()
df.plot(x='日期',y='销量')
plt.savefig('frist.png')

# 按月统计，生成柱状图
plt.figure()
df1 = df[:]
df1['month'] = df1['日期'].map(lambda x:x[:x.rindex('-')])
#按月分组并统计总量
df1 = df1.groupby(by='month',as_index=False).sum()
df1.plot(x='month',kind='bar')
plt.savefig('second.png')

# 查找涨幅最大的月份，写入文件
df2 = df1.drop('month',axis=1) .diff()
m = df2['销量'].nlargest(1).keys()[0]
with open('maxMonth.text','w') as fp:
    fp.write(df1.loc[m,'month'])

# 按季度统计，生成饼状图
plt.figure()
one = df1[:3]['销量'].sum()
two = df1[3:6]['销量'].sum()
three = df1[6:9]['销量'].sum()
four = df1[9:12]['销量'].sum()
plt.pie([one,two,three,four],labels=['one','two','three','four'])
plt.savefig('third.png')
